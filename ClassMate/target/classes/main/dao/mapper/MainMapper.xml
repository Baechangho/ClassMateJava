<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="main.dao.face.MainDao">
 
 	<select id="selectByEventFile">
 		SELECT head_img, event_no FROM event_board
 		WHERE event_exist = 0
 	</select>
 	
 	<select id="ClassOrderTop" parameterType="int">
		SELECT class_no, class_name, head_img, total_list_no
		FROM (
		    SELECT C.class_no, C.class_name, C.head_img, COUNT(CL.list_no) AS total_list_no
		    FROM class C
		    JOIN class_list CL ON C.class_no = CL.class_no
		    WHERE C.on_off = #{onOff} AND C.delete_boolean = 0
		    GROUP BY C.class_no, C.class_name, C.head_img, C.max_count
		    HAVING count(CL.list_no) &lt; C.max_count
		    ORDER BY count(CL.list_no) desc
		)
		WHERE ROWNUM &lt;= 5
 	</select>
 	
 	<select id="recommended" parameterType="int">
		SELECT class_no, class_name, head_img, total_list_no
		FROM (
		    SELECT C.class_no, C.class_name, C.head_img, COUNT(CL.list_no) AS total_list_no
		    FROM class C
		    JOIN class_list CL ON C.class_no = CL.class_no
		    WHERE C.on_off = #{onOff} AND C.delete_boolean = 0
		    GROUP BY C.class_no, C.class_name, C.head_img, C.max_count, C.expense
		    HAVING COUNT(CL.list_no) &lt; C.max_count
		    ORDER BY expense DESC
		)
		WHERE ROWNUM &lt;= 5
 	</select>
	 
	 <select id="mainCategoryList" resultType="MainCategory">
	 	SELECT * FROM main_category
	 </select>
	 
	 <select id="subCategoryList" resultType="SubCategory" parameterType="SubCategory">
	 	SELECT * FROM sub_category
	 	<where>
	 		AND main_category_no = #{mainCategoryNo}
	 	</where>
	 </select>
	 
	 <select id="mainOnClassCntAll" resultType="Integer" parameterType="Class">   	  
	    SELECT count(*), COUNT(CL.list_no) AS total_list_no
	    FROM class C
	    JOIN class_list CL ON C.class_no = CL.class_no
		    WHERE C.on_off = 1 AND C.delete_boolean = 0 AND C.sub_category_no = ${subCategoryNo}
		    GROUP BY C.class_no, C.teacher_no, C.main_category_no, C.sub_category_no, C.teacher, C.class_name, C.class_date, C.class_start, C.class_end, C.max_count,
		    C.expense, C.class_info, C.on_off, C.head_img, C.delete_boolean
		    HAVING COUNT(CL.list_no) &lt; C.max_count
		    ORDER BY C.class_no DESC
	 </select>
	 
	 <select id="onClassList" resultType="Class" parameterType="Map">
	 	SELECT * FROM (
	 		SELECT rownum runm, B.* FROM (
		        SELECT C.class_no, C.teacher_no, C.main_category_no, C.sub_category_no, C.teacher, C.class_name, C.class_date, C.class_start, C.class_end, C.max_count,
			    C.expense, C.class_info, C.on_off, C.head_img, C.delete_boolean, COUNT(CL.list_no) AS total_list_no
			    FROM class C
			    JOIN class_list CL ON C.class_no = CL.class_no
			    WHERE C.on_off = 1 AND C.delete_boolean = 0 AND C.sub_category_no = ${cLass.subCategoryNo}
			    GROUP BY C.class_no, C.teacher_no, C.main_category_no, C.sub_category_no, C.teacher, C.class_name, C.class_date, C.class_start, C.class_end, C.max_count,
			    C.expense, C.class_info, C.on_off, C.head_img, C.delete_boolean
			    HAVING COUNT(CL.list_no) &lt; C.max_count
			    ORDER BY C.class_no DESC
	 		) B
	 	) WHERE runm BETWEEN #{paging1.startNo} AND #{paging1.endNo}
	 </select>	 
	 
	 <select id="mainOffClassCntAll" resultType="Integer" parameterType="Class">
	    SELECT count(*), COUNT(CL.list_no) AS total_list_no
	    FROM class C
	    JOIN class_list CL ON C.class_no = CL.class_no
		    WHERE C.on_off = 0 AND C.delete_boolean = 0 AND C.sub_category_no = ${subCategoryNo}
		    GROUP BY C.class_no, C.teacher_no, C.main_category_no, C.sub_category_no, C.teacher, C.class_name, C.class_date, C.class_start, C.class_end, C.max_count,
		    C.expense, C.class_info, C.on_off, C.head_img, C.delete_boolean
		    HAVING COUNT(CL.list_no) &lt; C.max_count
		    ORDER BY C.class_no DESC
	 </select>

	 <select id="offClassList" resultType="Class" parameterType="Map">
	 	SELECT * FROM (
	 		SELECT rownum runm, B.* FROM (
		        SELECT C.class_no, C.teacher_no, C.main_category_no, C.sub_category_no, C.teacher, C.class_name, C.class_date, C.class_start, C.class_end, C.max_count,
			    C.expense, C.class_info, C.on_off, C.head_img, C.delete_boolean, COUNT(CL.list_no) AS total_list_no
			    FROM class C
			    JOIN class_list CL ON C.class_no = CL.class_no
			    WHERE C.on_off = 0 AND C.delete_boolean = 0 AND C.sub_category_no = ${cLass.subCategoryNo}
			    GROUP BY C.class_no, C.teacher_no, C.main_category_no, C.sub_category_no, C.teacher, C.class_name, C.class_date, C.class_start, C.class_end, C.max_count,
			    C.expense, C.class_info, C.on_off, C.head_img, C.delete_boolean
			    HAVING COUNT(CL.list_no) &lt; C.max_count
			    ORDER BY C.class_no DESC
	 		) B
	 	) WHERE runm BETWEEN #{paging1.startNo} AND #{paging1.endNo}
	 </select>
	 
	 <select id="onClassSortList" resultType="Class" parameterType="Map">
	 	SELECT * FROM (
	 		SELECT rownum runm, B.* FROM (
		        SELECT C.class_no, C.teacher_no, C.main_category_no, C.sub_category_no, C.teacher, C.class_name, C.class_date, C.class_start, C.class_end, C.max_count,
			    C.expense, C.class_info, C.on_off, C.head_img, C.delete_boolean, COUNT(CL.list_no) AS total_list_no
			    FROM class C
			    JOIN class_list CL ON C.class_no = CL.class_no
				    WHERE C.on_off = 1 AND C.delete_boolean = 0 AND C.sub_category_no = ${cLass.subCategoryNo}
				    GROUP BY C.class_no, C.teacher_no, C.main_category_no, C.sub_category_no, C.teacher, C.class_name, C.class_date, C.class_start, C.class_end, C.max_count,
				    C.expense, C.class_info, C.on_off, C.head_img, C.delete_boolean
				    HAVING COUNT(CL.list_no) &lt; C.max_count
				    ORDER BY ${sort}
	 		) B
	 	) WHERE runm BETWEEN #{paging1.startNo} AND #{paging1.endNo}
	 </select>	 
	 
	 <select id="offClassSortList" resultType="Class" parameterType="Map">
	 	SELECT * FROM (
	 		SELECT rownum runm, B.* FROM (
		        SELECT C.class_no, C.teacher_no, C.main_category_no, C.sub_category_no, C.teacher, C.class_name, C.class_date, C.class_start, C.class_end, C.max_count,
			    C.expense, C.class_info, C.on_off, C.head_img, C.delete_boolean, COUNT(CL.list_no) AS total_list_no
			    FROM class C
			    JOIN class_list CL ON C.class_no = CL.class_no
				    WHERE C.on_off = 0 AND C.delete_boolean = 0 AND C.sub_category_no = ${cLass.subCategoryNo}
				    GROUP BY C.class_no, C.teacher_no, C.main_category_no, C.sub_category_no, C.teacher, C.class_name, C.class_date, C.class_start, C.class_end, C.max_count,
				    C.expense, C.class_info, C.on_off, C.head_img, C.delete_boolean
				    HAVING COUNT(CL.list_no) &lt; C.max_count
				    ORDER BY ${sort}
	 		) B
	 	) WHERE runm BETWEEN #{paging1.startNo} AND #{paging1.endNo}
	 </select>
	 
	 <select id="onClassViewList" resultType="Class" parameterType="Class">
	 	SELECT * FROM class
	 	WHERE class_no = #{classNo}
	 </select>
	 
	 <select id="duplicationPayment" resultType="Integer" parameterType="Map">
	 	SELECT * FROM class C
	 	join order_tb O ON C.class_no = O.class_no
	 	WHERE C.class_no = #{cLass.classNo}
	 	AND user_no = #{userNo}
	 </select>
	 
	 <select id="duplicationBasket" resultType="Integer" parameterType="Map">
	 	SELECT * FROM basket
	 	WHERE class_no = #{cLass.classNo}
	 	AND user_no = #{userNo}
	 </select>
	 
	 <insert id="insertBasket" parameterType="Map">
	 	INSERT INTO basket( basket_no, user_no, class_no )
	 	VALUES( basket_seq.nextval, #{userNo}, #{cLass.classNo} )
	 </insert>
	 
	 <select id="getAddress" resultType="Address" parameterType="Class">
		SELECT address_no, main_address, sub_address FROM address
		<where>
			AND class_no = #{classNo}
		</where>
	 </select>
	 
	 <update id="endClass">
		 UPDATE class
			 SET delete_boolean = 1
			 WHERE class_end &lt; SYSTIMESTAMP
	 </update>
	 
 </mapper>