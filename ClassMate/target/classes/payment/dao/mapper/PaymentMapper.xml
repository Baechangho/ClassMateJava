<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="payment.dao.face.PaymentDao">

	<select id="selectUser" parameterType="int" resultType="UserInfo">
		SELECT user_no, user_id, user_pw, user_gender, user_birthday, user_phone, user_name
			, user_email, main_address, sub_address, user_post, user_secession, user_date_created 
		FROM user_info
		WHERE user_no = #{userNo} 
	</select>

	<select id="getBasketUserNo" parameterType="int" resultType="Basket">
		SELECT basket_no, user_no, class_no
		FROM basket
		WHERE user_no = #{userNo}
	</select>	

	<select id="selectClassListByBasket" parameterType="Basket" resultType="Class">
		SELECT class_no, teacher, class_name, class_start, class_end, max_count, expense, class_info, on_off
		FROM class
		WHERE class_no = #{classNo}
	</select>
	
	<insert id="insertOrderList" parameterType="OrderTb">
		<selectKey order="BEFORE" resultType="int" keyProperty="orderNo">
				SELECT order_seq.nextval FROM dual
		</selectKey> 
		INSERT INTO order_tb (order_no, user_no, class_no, merchant_uid)
		VALUES (#{orderNo}, #{userNo}, #{classNo}, #{merchantUid})
	</insert>
	
	<insert id="insertPaymentList" parameterType="Map">
		<selectKey order="BEFORE" resultType="int" keyProperty="payment.payNo">
				SELECT payment_seq.nextval FROM dual
		</selectKey> 
		INSERT INTO payment (
			pay_no, order_no, payment, pay_method, provider, card_name)
		VALUES (
			#{payment.payNo}, #{payment.orderNo}
			, (SELECT expense FROM class WHERE class_no = #{orderTb.classNo})
			, #{payment.payMethod}, #{payment.provider}, #{payment.cardName})
	</insert>
	
	<insert id="insertClassList" parameterType="Basket">
		INSERT INTO class_list (list_no, user_no, class_no, teacher_no)
		VALUES (class_list_seq.nextval, ${userNo}, ${classNo}, (SELECT teacher_no FROM class WHERE class_no = ${classNo}))
	</insert>
	
	<delete id="deleteBasket" parameterType="Basket">
		DELETE FROM basket
  		WHERE user_no = #{userNo}
  			AND class_no = #{classNo}
	</delete>
	
	<select id="selectOrderList" parameterType="String" resultType="OrderTb">
		SELECT order_no, merchant_uid FROM order_tb
		WHERE merchant_uid = #{merchantUid}
	</select>
	
<!-- 	<select id="selectOrderList" statementType="CALLABLE" parameterType="long" resultType="OrderTb"> -->
<!-- 		DECLARE -->
<!-- 		    code varchar2(1000); -->
<!-- 		    res number; -->
<!-- 		BEGIN -->
<!-- 		    code := 'CREATE TABLE clob_tmp' -->
<!-- 		        || ' AS SELECT' -->
<!-- 		        || '    order_no,' -->
<!-- 		        || '    to_lob(merchant_uid) tmp' -->
<!-- 		        || ' FROM order_tb'; -->
<!-- 		    EXECUTE IMMEDIATE code; -->
		
<!-- 		    code := '' -->
<!-- 		    || 'SELECT  order_no' -->
<!-- 		    || ' FROM    clob_tmp' -->
<!-- 		    || ' WHERE   DBMS_LOB.instr(tmp, ' || to_char(#{merchantUid}) || ') > 0'; -->
		
<!-- 		    EXECUTE IMMEDIATE code -->
<!-- 		    INTO res;  -->
		
<!-- 		    code := 'DROP TABLE clob_tmp'; -->
<!-- 		    EXECUTE IMMEDIATE code; -->
<!-- 		END; -->
<!-- 	</select> -->
	
	<select id="selectPaymentList" parameterType="int" resultType="Payment">
		SELECT payment FROM payment
		WHERE order_no = #{orderNo}
	</select>
	
	<select id="selectClassNoByMerchantUid" parameterType="String" resultType="Class">
		SELECT class_no
		FROM order_tb
		WHERE merchant_uid = #{merchantUid}
	
	</select>
	
	<select id="selectClassNameListByOrder" parameterType="Class" resultType="Class">
		SELECT class_name
		FROM class
		WHERE class_no = #{classNo}
	</select>
	
</mapper>