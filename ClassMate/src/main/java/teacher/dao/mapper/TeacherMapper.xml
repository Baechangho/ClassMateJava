<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teacher.dao.face.TeacherDao">

<sql id="selectClass">
SELECT class_no, teacher_no, main_category_no, sub_category_no, teacher, class_name, class_date, class_start,  
		class_end, max_count, expense, class_info, curriculum, on_off, head_img, delete_boolean
	FROM class
</sql>

<sql id="questionAnswer">
SELECT question_no, user_no, class_no, question_name, question_content, question_date, answer, answer_content 
	FROM question_answer
</sql>

<select id="getUserNameByUserNo" resultType="String" parameterType="int">
	SELECT user_name FROM user_info
		<where>
			AND user_no = #{userNo}
		</where>
</select>

<select id="getTeacherInfoByUserNoYo" resultType="Teacher" parameterType="int">
	SELECT teacher_no, teacher_img FROM teacher
		<where>
			AND user_no = #{userNo}
		</where>
</select>

<select id="selectByUserNo" resultType="int" parameterType="int">
SELECT teacher_no FROM teacher
	<where>
		AND user_no = #{userNo}
	</where>
</select>

<select id="selectByteacherNo" resultType="int" parameterType="int">
SELECT class_no FROM class
	<where>
		AND teacher_no = #{teacherNo}
	</where>
</select>

<select id="selectPageList" resultType="Class">
	SELECT * FROM class
		<where>
				AND teacher_no = #{teacherNo}
		</where>
				ORDER BY class_start DESC


</select>

<select id="selectCntAll" resultType="int" parameterType="int">
	SELECT count(*) FROM (
	<include refid="selectClass" />	
	)
	WHERE teacher_no = #{teacherNo}
</select>

<select id="selectByClassNo" resultType="Class" parameterType="Class">
	<include refid="selectClass" />
	<where>
		AND class_no = #{classNo}
	</where>
</select>

<select id="selectAnswerCntAll" resultType="int" parameterType="int">
	SELECT count(*) FROM ()
	<include refid="questionAnswer" />
	WHERE class_no = #{classNo}
	)
</select>

<select id="selectTeacherClass"  resultType="Class" parameterType="int">
	SELECT * FROM class
		<where>
			AND teacher_no = #{teacherNo}
			AND on_off = 1
		</where>
</select>

<insert id="applyTeacherImgFile" parameterType="Teacher">
	<selectKey order="BEFORE" resultType="int" keyProperty="teacherNo">
			SELECT teacher_seq.nextval FROM dual
	</selectKey>
	INSERT INTO teacher (teacher_no, user_no, teacher_img, teacher_info, teacher_career, teacher_title)
	VALUES ( #{teacherNo}, #{userNo}, #{teacherImg}, #{teacherInfo}, #{teacherCareer}, #{teacherTitle}) 
</insert>

<insert id="applyInsertFile" parameterType="TeacherLicence">
	<selectKey order="BEFORE" resultType="int" keyProperty="licenceNo">
			SELECT teacher_licence_seq.nextval FROM dual
	</selectKey>
	INSERT INTO teacher_licence ( licence_no, teacher_no, origin_name, stored_name )
		VALUES ( #{licenceNo}, #{teacherNo}, #{originName}, #{storedName})
</insert>

<insert id="applyPrcInsert" parameterType="TeacherApply">
	<selectKey order="BEFORE" resultType="int" keyProperty="applyNo">
			SELECT teacher_apply_seq.nextval FROM dual
	</selectKey>
	INSERT INTO teacher_apply (apply_no, teacher_no, apply_date)
	VALUES (#{applyNo}, #{teacherNo}, SYSTIMESTAMP)		
</insert>

<select id="selectNameByUserNo" resultType="UserInfo" parameterType="int">
	SELECT  user_name FROM user_info
		<where>
			AND user_no = #{userNo}
		</where>

</select>


<select id="selectByCategoryName" resultType="int" parameterType="MainCategory">
	SELECT main_category_no FROM main_category
		<where>
			AND main_category_name = #{mainCategoryName}
		</where>
</select>

<select id="selectBySubCategoryName" resultType="int" parameterType="SubCategory">
	SELECT sub_category_no FROM sub_category
		<where>
			AND main_category_no = #{mainCategoryNo}
			AND sub_category_name = #{subCategoryName}
		</where>
</select>

<select id="selectByInsertClassNo" resultType="int">
	SELECT class_seq.nextval FROM dual
</select>

<insert id="registClassInsert" parameterType="Class">
	INSERT INTO class (class_no, teacher_no, main_category_no, sub_category_no, teacher, class_name, class_date, class_start, 
		class_end, max_count, expense, class_info, curriculum, on_off, head_img, delete_boolean)
		VALUES (#{classNo}, #{teacherNo}, #{mainCategoryNo}, #{subCategoryNo}, #{teacher}, #{className}, SYSDATE, #{classStart}, 
		#{classEnd}, #{maxCount}, #{expense}, #{classInfo}, #{curriculum}, #{onOff}, #{headImg}, #{deleteBoolean})
</insert>

<insert id="insertAddress" parameterType="address">
<selectKey order="BEFORE" resultType="int" keyProperty="addressNo">
			SELECT address_seq.nextval FROM dual
	</selectKey>
	INSERT INTO address (address_no, class_no, main_address, sub_address)
	VALUES (#{addressNo}, #{classNo}, #{mainAddress}, #{subAddress})
</insert>

<insert id="onClassInsertFile" parameterType="ClassVideo">
<selectKey order="BEFORE" resultType="int" keyProperty="videoNo">
			SELECT class_video_seq.nextval FROM dual
	</selectKey>
	INSERT INTO class_video (video_no, class_no, video_lesson, origin_name, stored_name)
	VALUES (#{videoNo}, #{classNo}, #{videoLesson}, #{originName}, #{storedName})

</insert>

<select id="selectCntAll2" resultType="int" parameterType="int">
	SELECT count(*) FROM question_answer
		<where>
			AND class_no = #{classNo2}
		</where>

</select>

<select id="selectQaList" resultType="QuestionAnswer" parameterType="int">

	 			SELECT question_no, user_no, class_no, question_name, question_content, question_date, answer, answer_content 
				FROM question_answer 
				WHERE class_no = #{classNo}
	 			ORDER BY question_date DESC

	
</select>

<update id="qaUpdate" parameterType="QuestionAnswer">
	UPDATE question_answer SET answer = 1 , answer_content = #{answerContent}
		<where>
			AND question_no = #{questionNo}
		</where>
</update>

<select id="getClassList" resultType="Class" parameterType="HashMap">
	SELECT * FROM (
    SELECT rownum rnum, B.*
    FROM(
	SELECT COUNT(DISTINCT O.order_no) AS orderNo, C.class_name, C.class_no, C.class_start, C.class_end, C.max_count, C.on_off, C.expense
	FROM class C
		JOIN order_tb O ON C.class_no = O.class_no
		JOIN payment P ON O.order_no = P.order_no
		WHERE C.teacher_no = #{teacherNo}
		GROUP BY C.class_name, C.class_no, C.class_start, C.class_end, C.max_count, C.on_off, C.expense
		ORDER BY orderNo DESC
		    ) B
	) WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
</select>

<select id="getPaymentList" resultType="Payment" parameterType="HashMap">
	SELECT * FROM (
    SELECT rownum rnum, B.*
    FROM (
        SELECT
            COUNT(DISTINCT O.order_no) AS orderNo,
            SUM(P.payment) AS payment
        FROM class C
        JOIN order_tb O ON C.class_no = O.class_no
        JOIN payment P ON O.order_no = P.order_no
        WHERE C.teacher_no = #{teacherNo}
        GROUP BY C.class_name, C.class_no, C.class_start, C.class_end, C.max_count, C.on_off, C.expense
        ORDER BY orderNo DESC
    ) B
	) WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}

</select>

<select id="getOnOffClassList" resultType="Class" parameterType="HashMap">
	SELECT * FROM (
    SELECT rownum rnum, B.*
    FROM (
	SELECT COUNT(DISTINCT O.order_no) AS orderNo, C.class_name, C.class_no, C.class_start, C.class_end, C.max_count, C.on_off, C.expense
	FROM class C
		JOIN order_tb O ON C.class_no = O.class_no
		JOIN payment P ON O.order_no = P.order_no
		WHERE C.teacher_no = #{teacherNo}
		AND C.on_off = #{onOff}
		GROUP BY C.class_name, C.class_no, C.class_start, C.class_end, C.max_count, C.on_off, C.expense
		ORDER BY orderNo DESC
	) B
	) WHERE rnum BETWEEN #{onPaging.startNo} AND #{onPaging.endNo}
</select>


<select id="getOnOffPaymentList" resultType="Payment" parameterType="HashMap">
	SELECT * FROM (
    SELECT rownum rnum, B.*
    FROM (
        SELECT
            COUNT(DISTINCT O.order_no) AS orderNo,
            SUM(P.payment) AS payment
        FROM class C
        JOIN order_tb O ON C.class_no = O.class_no
        JOIN payment P ON O.order_no = P.order_no
        WHERE C.teacher_no = #{teacherNo}
        AND on_off = #{onOff}
        GROUP BY C.class_name, C.class_no, C.class_start, C.class_end, C.max_count, C.on_off, C.expense
        ORDER BY orderNo DESC
    ) B
	) WHERE rnum BETWEEN #{onPaging.startNo} AND #{onPaging.endNo}

</select>

<select id="selectpayDetailCntAll" resultType="int" parameterType="HashMap">
	SELECT count(*) FROM(
		SELECT C.class_name, C.class_no, COUNT(DISTINCT O.order_no) AS orderNo, SUM(P.payment) AS total_payment, C.class_start, C.class_end, C.max_count, C.on_off, C.expense
		FROM class C
		JOIN order_tb O ON C.class_no = O.class_no
		JOIN payment P ON O.order_no = P.order_no
		WHERE C.teacher_no = #{teacherNo}
		GROUP BY C.class_name, C.class_no, C.class_start, C.class_end, C.max_count, C.on_off, C.expense
		ORDER BY orderNo DESC
	)
</select>

<select id="selectClassPayDetailCntAll" resultType="int" parameterType="HashMap">
	SELECT count(*) FROM(
		SELECT C.class_name, C.class_no, COUNT(DISTINCT O.order_no) AS orderNo, SUM(P.payment) AS total_payment, C.class_start, C.class_end, C.max_count, C.on_off, C.expense
		FROM class C
		JOIN order_tb O ON C.class_no = O.class_no
		JOIN payment P ON O.order_no = P.order_no
		WHERE C.teacher_no = #{teacherNo}
		AND C.on_off = #{onOff}
		GROUP BY C.class_name, C.class_no, C.class_start, C.class_end, C.max_count, C.on_off, C.expense
		ORDER BY orderNo DESC
	)
</select>



</mapper>