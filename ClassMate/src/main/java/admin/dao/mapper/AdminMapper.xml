<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="admin.dao.face.AdminDao">
  
 	 <!-- 메인 -->
  	<select id="getUserCountAll" resultType="int" parameterType="int">
	  	SELECT count(*)	FROM user_info	
	  	WHERE user_no > 0
			AND user_secession = #{param}
		ORDER BY user_no
  	</select>
  
   	<select id="getTeacherUserCountAll" resultType="int" parameterType="int">
	  	SELECT count(*)	FROM teacher_apply	
	  	WHERE pass_or_not = #{param}
  	</select>
  	
    <select id="getOnOffClassCountAll" resultType="int" parameterType="int">
	  	SELECT count(*)	FROM class	
	  	WHERE delete_boolean = 0
			AND on_off = #{param}
  	</select>

	<select id="getPaymentData" resultType="Payment" parameterType="int">
	    SELECT TRUNC(pay_date, 'MONTH') AS payDate,
	        SUM(payment) AS payment
	    FROM payment
	    WHERE TRUNC(pay_date, 'MONTH') = TRUNC(ADD_MONTHS(SYSDATE, -#{monthCount}), 'MONTH')
	    GROUP BY TRUNC(pay_date, 'MONTH')
	</select>

    <!-- ================================================================================================================== -->
  	<!-- 유저 관리 -->
  	
    <select id="userInfoCntAll" resultType="int" parameterType="int">
	  	SELECT count(*) FROM user_info
	  	WHERE user_secession = #{delCheckbox}
  	</select>
  	
  	<select id="selectUserAll" resultType="UserInfo" parameterType="Map">
     		SELECT
			user_no, user_id, user_pw, user_gender, user_birthday, user_phone
			, user_name, user_email, main_address, sub_address, user_post, user_secession, user_date_created
	        FROM user_info
	        WHERE user_secession = 0
	        <choose>
		      <when test="sort == 1">
		        ORDER BY user_no DESC
		      </when>
		      <when test="sort == 2">
		        ORDER BY user_name
		      </when>
		      <when test="sort == 3">
		        ORDER BY user_name DESC
		      </when>
		    </choose>
  	</select>
  	
  	<select id="selectDelUserAll" resultType="UserInfo" parameterType="Map">
     		SELECT
			user_no, user_id, user_pw, user_gender, user_birthday, user_phone
			, user_name, user_email, main_address, sub_address, user_post, user_secession, user_date_created
	        FROM user_info
	        WHERE user_secession = 1
	        <choose>
		      <when test="sort == 1">
		        ORDER BY user_no DESC
		      </when>
		      <when test="sort == 2">
		        ORDER BY user_name
		      </when>
		      <when test="sort == 3">
		        ORDER BY user_name DESC
		      </when>
		    </choose>
  	</select>
  	
	<select id="selectTeacherApplyByUserNo" resultType="TeacherApply" parameterType="java.util.List">
	    <foreach collection="list" item="user" separator="UNION ALL">
	        SELECT apply_no, teacher_no, apply_date, pass_or_not
	        FROM teacher_apply
	        WHERE teacher_no IN (SELECT teacher_no FROM teacher WHERE user_no = #{user.userNo})
	    </foreach>
	</select>
  	
  	<select id="selectUser" resultType="UserInfo" parameterType="UserInfo">
  		SELECT
			user_no, user_id, user_pw, user_gender, user_birthday, user_phone
			, user_name, user_email, main_address, sub_address, user_post, user_secession, user_date_created
        FROM user_info
  		WHERE user_no = #{userNo} 
  	</select>
  	
  	<update id="updateUser" parameterType="UserInfo">
  		UPDATE user_info
  		SET user_gender = #{userGender} 
  			, user_birthday = #{userBirthday}
  			, user_phone = #{userPhone}
  			, user_name = #{userName}
  			, user_post = #{userPost}
  			, main_address = #{mainAddress}
  			, sub_address = #{subAddress}
  		WHERE user_no = #{userNo}
  	</update>
  	
  	 <update id="updateAdmin" parameterType="UserInfo">
  		UPDATE user_info
  		SET user_gender = #{userGender} 
  			, user_birthday = #{userBirthday}
  			, user_phone = #{userPhone}
  			, user_name = #{userName}
  			, user_email = #{userEmail}
  			, user_post = #{userPost}
  			, main_address = #{mainAddress}
  			, sub_address = #{subAddress}
  		WHERE user_no = #{userNo}
  	</update>
  	
  	<update id="setSecessionUser" parameterType="int">
  		UPDATE user_info
  		set user_secession = 1
  		WHERE user_no = #{userNo}
  	</update>
  	
  	<select id="selectOrderCnt" resultType="int" parameterType="OrderTb">
	  	SELECT count(*) FROM order_tb
	  	WHERE user_no = #{userNo}
  	</select>
  	
  	<select id="selectUserOrder" resultType="OrderTb" parameterType="Map">
    	SELECT
			order_no, user_no, class_no, merchant_uid, refund
        FROM order_tb
        WHERE user_no = #{orderTb.userNo}
        ORDER BY order_no DESC
  	</select>
  	
  	<select id="selectUserPayment" resultType="Payment" parameterType="Map">
	    <foreach collection="orderList" item="orderTb" separator="UNION ALL">
	        SELECT
	        pay_no, order_no, pay_date, payment, pay_method, provider, card_name
	        FROM payment
	        WHERE order_no = #{orderTb.orderNo}
	    </foreach>
	</select>

	<select id="selectClassNameByClassNo" resultType="Class" parameterType="int">
	  	SELECT class_name FROM class
	  	WHERE class_no = #{classNo}
  	</select>
  	
  	<select id="userQuestionCntAll" resultType="int" parameterType="UserInfo">
	  	SELECT count(*) FROM question
	  	WHERE user_no = #{userNo}
  	</select>
  	
  	<select id="userQuestionList" resultType="Question" parameterType="Map">
	    SELECT * FROM (
	        SELECT rownum rnum, B.* FROM(
	                SELECT
	                question_no, user_no, question_category, question_name, question_content, question_date, question_hit
						, question_exist, answer, answer_content
					FROM question
	                WHERE user_no = #{userInfo.userNo}
	                ORDER BY question_no DESC
	        ) B
	    ) WHERE rnum BETWEEN #{questionPaging.startNo} AND #{questionPaging.endNo}
	</select>
	
	<select id="userFreeboardCntAll" resultType="int" parameterType="UserInfo">
	  	SELECT count(*) FROM free_board
	  	WHERE user_no = #{userNo}
  	</select>
  	
  	<select id="userFreeBoardList" resultType="FreeBoard" parameterType="Map">
	    SELECT * FROM (
	        SELECT rownum rnum, B.* FROM(
	                SELECT free_no, user_no, free_head, free_date, free_hit, free_name, free_content
					FROM free_board
	                WHERE user_no = #{userInfo.userNo}
	                ORDER BY free_no DESC
	        ) B
	    ) WHERE rnum BETWEEN #{freeBoardPaging.startNo} AND #{freeBoardPaging.endNo}
	</select>
	
	<select id="selectQuestionNo" resultType="Question" parameterType="Question">
	  	SELECT question_no, user_no, question_category, question_name, question_content, question_date
			, question_hit, question_exist, answer, answer_content
		FROM question
	  	WHERE question_no = #{questionNo}
  	</select>
	
	<select id="selectQuestionFiles" resultType="QuestionFile" parameterType="Question">
  		SELECT
			file_no, question_no, origin_name, stored_name
        FROM question_file
  		WHERE question_no = #{questionNo}
  	</select>
  	
  	<select id="selectQuestionFileByFileNo" resultType="QuestionFile" parameterType="QuestionFile">
  		SELECT
			file_no, question_no, origin_name, stored_name
        FROM question_file
  		WHERE file_no = #{fileNo}
  	</select>
  	
  	<update id="insertAnswer" parameterType="Question">
  		UPDATE question
  		SET answer = #{answer} 
  			, answer_content = #{answerContent}
  		WHERE question_no = #{questionNo}
  	</update>
  	
  	<select id="selectUserFreePost" resultType="FreeBoard" parameterType="FreeBoard">
	  	SELECT free_no, user_no, free_head, free_date, free_hit, free_name, free_content
		FROM free_board
	  	WHERE free_no = #{freeNo}
  	</select>
  	
  	<select id="selectFreePostFile" resultType="FreeBoardFile" parameterType="FreeBoard">
  		SELECT
			file_no, free_no, origin_name, stored_name
        FROM free_board_file
  		WHERE free_no = #{freeNo}
  	</select>
  	
  	<update id="updateUserFreePost" parameterType="FreeBoard">
  		UPDATE free_board
  		SET free_head = #{freeHead} 
  			,free_name = #{freeName} 
  			, free_content = #{freeContent}
  		WHERE free_no = #{freeNo}
  	</update>
  	
  	<insert id="insertFreeFile" parameterType="FreeBoardFile">
		<selectKey order="BEFORE" resultType="int" keyProperty="fileNo">
			SELECT freeboard_file_seq.nextval FROM dual
		</selectKey>
		
		INSERT INTO free_board_file ( file_no, free_no, origin_name, stored_name )
		VALUES ( #{fileNo}, #{freeNo}, #{originName}, #{storedName} )
	</insert>
	
	<delete id="deleteFreeFiles" parameterType="int[]">
		DELETE free_board_file
		<where>
			file_no IN
			<foreach collection="array" item="no" open="(" close=")" separator=",">
				#{no }
			</foreach>
		</where>
	</delete>
	
	<delete id="deleteFreePostFile" parameterType="FreeBoard">
		DELETE free_board_file
		WHERE free_no = #{freeNo}
	</delete>
	
	<delete id="deleteUserFreePost" parameterType="FreeBoard">
		DELETE free_board
		WHERE free_no = #{freeNo}
	</delete>
	
	<delete id="deleteTeacherInfoByUserNo" parameterType="UserInfo">
		DELETE teacher
		WHERE user_no = #{userNo}
	</delete>
	
	<delete id="deleteUserInfo" parameterType="UserInfo">
		DELETE user_info
		WHERE user_no = #{userNo}
	</delete>
	
	<!-- ================================================================================================================== -->
  	<!-- 유저 관리 > 환불처리 -->
  	
  	<update id="updateRefund" parameterType="String">
  		UPDATE order_tb
  		SET refund = 1 
  		WHERE merchant_uid = #{merchantUid}
  	</update>
  	
  	<delete id="deleteClassList" parameterType="int">
  		DELETE class_list
			WHERE user_no = #{userNo}
  	</delete>
  	
  	<!-- ================================================================================================================== -->
  	<!-- 강사 신청 관리 -->
  	
  	<select id="selectApplyCntAll" resultType="int" parameterType="int">
	  	SELECT count(*)	FROM teacher_apply	
	  	WHERE pass_or_not = #{passCheckbox}
  	</select>
  	
  	<select id="selectTeacherApplyAll" resultType="TeacherApply" parameterType="map">
    	SELECT
			apply_no, teacher_no, apply_date, pass_or_not
        FROM teacher_apply
        WHERE pass_or_not = #{passCheckbox}
        ORDER BY teacher_no
  	</select>
  	
  	<select id="selectTeacherInfoAll" resultType="Teacher" parameterType="map">
	  	<foreach collection="teacherApplyList" item="teacherApplyList" separator="UNION ALL">
	    	SELECT
				teacher_no, user_no, teacher_img, teacher_title, teacher_info, teacher_career
	        FROM teacher
	        WHERE teacher_no = #{teacherApplyList.teacherNo}
	    </foreach>
  	</select>
  	
  	<select id="selectTeacherInfo" resultType="Teacher" parameterType="TeacherApply">
  		SELECT teacher_no, user_no, teacher_img, teacher_title, teacher_info, teacher_career
  		FROM teacher
  		WHERE teacher_no = #{teacherNo}
  	</select>

  	<select id="selectTeacherApply" resultType="TeacherApply" parameterType="TeacherApply">
  		SELECT apply_no, teacher_no, apply_date, pass_or_not
  		FROM Teacher_apply
  		WHERE teacher_no = #{teacherNo}
  	</select>
  	
  	<select id="selectUserName" resultType="UserInfo" parameterType="Teacher">
  		SELECT user_name
  		FROM user_info
  		WHERE user_no = #{userNo}
  	</select>
  	
  	<select id="selectTeacherLicence" resultType="TeacherLicence" parameterType="teacher">
  		SELECT licence_no, teacher_no,  origin_name, stored_name
  		FROM teacher_licence
  		WHERE teacher_no = #{teacherNo}
  	</select>
  	
  	<update id="updateTeacherApply" parameterType="TeacherApply">
  		UPDATE teacher_apply
  		SET pass_or_not = #{passOrNot} 
  		WHERE teacher_no = #{teacherNo}
  	</update>
  	
  	<delete id="deleteTeacherApply" parameterType="TeacherApply">
  		DELETE teacher_apply
			WHERE teacher_no = #{teacherNo}
  	</delete>
  	
  	<delete id="deleteTeacherLicence" parameterType="TeacherApply">
  		DELETE teacher_licence
			WHERE teacher_no = #{teacherNo}
  	</delete>
  	
  	<delete id="deleteTeacherInfo" parameterType="TeacherApply">
  		DELETE teacher
			WHERE teacher_no = #{teacherNo}
  	</delete>
  	
  	<select id="selectTeacherLicenceByLicenceNo" resultType="TeacherLicence" parameterType="TeacherLicence">
  		SELECT
			licence_no, teacher_no, origin_name, stored_name
        FROM teacher_licence
  		WHERE licence_no = #{licenceNo}
  	</select>
  	
  	<!-- ================================================================================================================== -->
  	<!-- 클래스 관리 -->
  	
  	<select id="classInfoCntAll" resultType="int" parameterType="Map">
  	SELECT count(*) FROM class
  	WHERE on_off = #{sort}
  		AND delete_boolean = #{delCheckbox}
  	</select>
  	
  	<select id="selectClassListAll" resultType="Class" parameterType="Map">
  		SELECT * FROM (
    		SELECT rownum rnum, B.* FROM(
      			SELECT
					class_no, teacher_no, main_category_no, sub_category_no, teacher, class_name, class_date, class_start
					, class_end, max_count, expense, class_info, curriculum, on_off, head_img, delete_boolean
		        FROM class
 				WHERE on_off = #{sort}
  					AND delete_boolean = #{delCheckbox}
   			)B
		)WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
  	</select>
  	
  	<select id="selectClassInfo" resultType="Class" parameterType="Class">
  		SELECT class_no, teacher_no, main_category_no, sub_category_no, teacher, class_name, class_date, class_start
			, class_end, max_count, expense, class_info, curriculum, on_off, head_img, delete_boolean
		FROM class
		WHERE class_no = #{classNo}
  	</select>
  	
  	<select id="selectTakeClassListCount" resultType="int" parameterType="Class">
  		SELECT count(*)
  		FROM class_list
  		WHERE class_no = ${classNo}
  	</select>
  	
  	<update id="updateClassDeleteBoolean" parameterType="Class">
  		UPDATE class
  		SET delete_boolean = 1 
  		WHERE class_no = #{classNo}
  	</update>
  	
  	<select id="selectClassVideoList" resultType="ClassVideo" parameterType="Class">
	  	SELECT video_no, class_no, video_lesson, origin_name, stored_name
	  	FROM class_video
	  	WHERE class_no = #{classNo}
  	</select>
  	
  	<select id="selectClassAdress" resultType="Address" parameterType="Class">
	  	SELECT address_no, class_no, main_address, sub_address
		FROM address
	  	WHERE class_no = #{classNo}
  	</select>
  	
  	<update id="updateClassInfo" parameterType="Class">
  		UPDATE class
  		SET class_name = #{className} 
  		, class_start = #{classStart} 
  		, class_end = #{classEnd} 
  		, max_count = #{maxCount} 
  		, expense = #{expense} 
  		, class_info = #{classInfo} 
  		, curriculum = #{curriculum} 
  		WHERE class_no = #{classNo}
  	</update>
  	
  	<update id="updateClassAddress" parameterType="Address">
  		UPDATE address
  		SET main_address = #{mainAddress} 
  			, sub_address = #{subAddress} 
  		WHERE class_no = #{classNo}
  	</update>
  	
  	<update id="classHeadImg" parameterType="Class">
  		UPDATE class
  		SET head_img = #{headImg} 
  		WHERE class_no = #{classNo}
  	</update>
  	
  	<!-- ================================================================================================================== -->
  	<!-- 게시판 관리 -->
  	
  	<select id="announceBoardCntAll" resultType="int" parameterType="int">
  	SELECT count(*) FROM announce_board 
  	WHERE announce_exist = #{announceExist}
  	</select>
  	
  	<select id="eventBoardCntAll" resultType="int" parameterType="int">
  	SELECT count(*) FROM event_board 
  	WHERE event_exist = #{eventExist}
  	</select>
  	
  	<select id="selectEventBoardAll" resultType="EventBoard" parameterType="Map">
  		SELECT * FROM (
    		SELECT rownum rnum, B.* FROM(
      			SELECT
				event_no, user_no, event_head, event_date, event_hit, event_name, event_content, event_exist, head_img
				FROM event_board
				WHERE event_exist = 0
		        ORDER BY event_no DESC
   			)B
		)WHERE rnum BETWEEN #{eventPaging.startNo} AND #{eventPaging.endNo}
  	</select>
  	
  	<select id="selectAnnounceBoardAll" resultType="AnnounceBoard" parameterType="Map">
  		SELECT * FROM (
    		SELECT rownum rnum, B.* FROM(
      			SELECT
				announce_no, user_no, announce_head, announce_date, announce_hit, announce_name, announce_content, announce_exist
				FROM announce_board
				WHERE announce_exist = 0
		        ORDER BY announce_no DESC
   			)B
		)WHERE rnum BETWEEN #{announcePaging.startNo} AND #{announcePaging.endNo}
  	</select>
  	
  	<select id="selectEventBoardDel" resultType="EventBoard" parameterType="Map">
  		SELECT * FROM (
    		SELECT rownum rnum, B.* FROM(
      			SELECT
				event_no, user_no, event_head, event_date, event_hit, event_name, event_content, event_exist, head_img
				FROM event_board
				WHERE event_exist = 1
		        ORDER BY event_no DESC
   			)B
		)WHERE rnum BETWEEN #{eventPaging.startNo} AND #{eventPaging.endNo}
  	</select>
  	
  	<select id="selectAnnounceBoardDel" resultType="AnnounceBoard" parameterType="Map">
  		SELECT * FROM (
    		SELECT rownum rnum, B.* FROM(
      			SELECT
				announce_no, user_no, announce_head, announce_date, announce_hit, announce_name, announce_content, announce_exist
				FROM announce_board
				WHERE announce_exist = 1
		        ORDER BY announce_no DESC
   			)B
		)WHERE rnum BETWEEN #{announcePaging.startNo} AND #{announcePaging.endNo}
  	</select>
  	
  	<select id="selectAnnounceNo" resultType="AnnounceBoard" parameterType="AnnounceBoard">
  		SELECT
			announce_no, user_no, announce_head, announce_date, announce_hit, announce_name, announce_content, announce_exist
			, (select user_name FROM user_info WHERE user_no = 0) user_name
        FROM Announce_board
  		WHERE announce_no = #{announceNo}
  	</select>
  	
  	<insert id="insertAnnounceInfo" parameterType="AnnounceBoard">
  		<selectKey order="BEFORE" resultType="int" keyProperty="announceNo">
			SELECT announce_board_seq.nextval FROM dual
		</selectKey> 
  		INSERT INTO announce_board (announce_no, user_no, announce_head, announce_name, announce_content, announce_exist)
  		VALUES (#{announceNo}, 0, #{announceHead}, #{announceName}, #{announceContent}, 0)
  	</insert>
  	
  	<insert id="insertEventInfo" parameterType="EventBoard">
  		<selectKey order="BEFORE" resultType="int" keyProperty="eventNo">
			SELECT event_board_seq.nextval FROM dual
		</selectKey> 
  		INSERT INTO event_board (event_no, user_no, event_head, event_name, event_content, event_exist, head_img)
  		VALUES (#{eventNo}, 0, #{eventHead}, #{eventName}, #{eventContent}, 0, #{headImg})
  	</insert>
  	
  	<update id="headImg" parameterType="EventBoard">
  		UPDATE event_board
  		SET head_img = #{headImg} 
  		WHERE event_no = #{eventNo}
  	</update>
  	
  	 <select id="selectEventNo" resultType="EventBoard" parameterType="EventBoard">
  		SELECT
			event_no, user_no, event_head, event_date, event_hit, event_name, event_content, event_exist, head_img
			, (select user_name FROM user_info WHERE user_no = 0) user_name
        FROM event_board
  		WHERE event_no = #{eventNo}
  	</select>
  	
  	<insert id="insertAnnoFile" parameterType="AnnounceBoardFile">
		<selectKey order="BEFORE" resultType="int" keyProperty="fileNo">
			SELECT announce_board_file_seq.nextval FROM dual
		</selectKey>
		
		INSERT INTO announce_board_file ( file_no, announce_no, origin_name, stored_name )
		VALUES ( #{fileNo}, #{announceNo}, #{originName}, #{storedName} )
	</insert>
  	
  	
  	<select id="selectAnnounceFile" resultType="AnnounceBoardFile" parameterType="AnnounceBoard">
  		SELECT
			file_no, announce_no, origin_name, stored_name
        FROM announce_board_file
  		WHERE announce_no = #{announceNo}
  	</select>
  	
  	<insert id="insertEventFile" parameterType="EventBoardFile">
		<selectKey order="BEFORE" resultType="int" keyProperty="fileNo">
			SELECT event_board_file_seq.nextval FROM dual
		</selectKey>
		
		INSERT INTO event_board_file ( file_no, event_no, origin_name, stored_name )
		VALUES ( #{fileNo}, #{eventNo}, #{originName}, #{storedName} )
	</insert>
	
	<select id="selectEventFile" resultType="EventBoardFile" parameterType="EventBoard">
  		SELECT
			file_no, event_no, origin_name, stored_name
        FROM event_board_file
  		WHERE event_no = #{eventNo}
  	</select>
  	
  	<update id="updateEventInfo" parameterType="EventBoard">
  		UPDATE event_board
  		SET event_name = #{eventName} 
  			, event_content = #{eventContent}
  		WHERE event_no = #{eventNo}
  	</update>
  	
  	<delete id="deleteEventFiles" parameterType="int[]">
		DELETE event_board_file
		<where>
			file_no IN
			<foreach collection="array" item="no" open="(" close=")" separator=",">
				#{no }
			</foreach>
		</where>
	</delete>
	
	<update id="updateAnnoInfo" parameterType="AnnounceBoard">
  		UPDATE announce_board
  		SET announce_name = #{announceName} 
  			, announce_content = #{announceContent}
  		WHERE announce_no = #{announceNo}
  	</update>
  	
  	<delete id="deleteAnnoFiles" parameterType="int[]">
		DELETE announce_board_file
		<where>
			file_no IN
			<foreach collection="array" item="no" open="(" close=")" separator=",">
				#{no }
			</foreach>
		</where>
	</delete>
  	
  	<update id="updateAnnoExist" parameterType="AnnounceBoard">
  		UPDATE announce_board
  		SET announce_exist = 1 
  		WHERE announce_no = #{announceNo}
  	</update>
  	
  	<update id="updateEventExist" parameterType="EventBoard">
  		UPDATE event_board
  		SET event_exist = 1 
  		WHERE event_no = #{eventNo}
  	</update>
  	
  	<delete id="deleteAnnoFile" parameterType="AnnounceBoard">
		DELETE announce_board_file
		WHERE announce_no = #{announceNo}
	</delete>
	
	<delete id="deleteAnnoInfo" parameterType="AnnounceBoard">
		DELETE announce_board
		WHERE announce_no = #{announceNo}
	</delete>
	
  	<select id="selectAnnoFileByFileNo" resultType="AnnounceBoardFile" parameterType="AnnounceBoardFile">
  		SELECT
			file_no, announce_no, origin_name, stored_name
        FROM announce_board_file
  		WHERE file_no = #{fileNo}
  	</select>
  	
  	<select id="selectEventFileByFileNo" resultType="EventBoardFile" parameterType="EventBoardFile">
  		SELECT
			file_no, event_no, origin_name, stored_name
        FROM event_board_file
  		WHERE file_no = #{fileNo}
  	</select>
	
	<delete id="deleteEventFile" parameterType="EventBoard">
		DELETE event_board_file
		WHERE event_no = #{eventNo}
	</delete>
	
	<delete id="deleteEventInfo" parameterType="EventBoard">
		DELETE event_board
		WHERE event_no = #{eventNo}
	</delete>
  	  	  	
  	<!-- ================================================================================================================== -->
  	<!-- 강사 신청 관리 -->
  	
  	<select id="freeBoardCntAll" resultType="int">
	  	SELECT count(*) FROM free_board
  	</select>
  	
  	<select id="selectFreeBoardAll" resultType="FreeBoard" parameterType="Map">
  		SELECT * FROM (
  			SELECT rownum rnum, B.* FROM(
	    		SELECT	FB.free_no, UI.user_no, FB.free_head, FB.free_date, FB.free_hit, FB.free_name, FB.free_content, UI.user_name
				FROM free_board FB
				JOIN user_info UI ON FB.user_no = UI.user_no
				<choose>
			      <when test="sort == 0">
			        ORDER BY FB.free_date DESC
			      </when>
			      <when test="sort == 1">
			        ORDER BY FB.free_date
			      </when>
			      <when test="sort == 2">
			        ORDER BY UI.user_name
			      </when>
			      <when test="sort == 3">
			        ORDER BY FB.free_name
			      </when>
			    </choose>
   			)B
		)WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
	</select>
  	
  	<delete id="deleteFreeFilesByFreeNo" parameterType="int[]">
		DELETE free_board_file
		<where>
			free_no IN
			<foreach collection="array" item="no" open="(" close=")" separator=",">
				#{no }
			</foreach>
		</where>
	</delete>
  	
  	<delete id="deletePostBoardNo" parameterType="int[]">
		DELETE free_board
		<where>
			free_no IN
			<foreach collection="array" item="no" open="(" close=")" separator=",">
				#{no }
			</foreach>
		</where>
	</delete>
	
  	<select id="freeCommentCntAll" resultType="int" parameterType="FreeBoard">
	  	SELECT count(*)	FROM free_comment	
	  	WHERE free_no = #{freeNo}
  	</select>
  	
  	<select id="selectFreeCommentList" resultType="FreeComment" parameterType="Map">
   		SELECT	free_comment_no, free_no, free_comment_content, free_comment_date, user_no
		FROM free_comment
		WHERE free_no = #{freeBoard.freeNo}
		ORDER BY free_comment_no DESC
	</select>
	
	<select id="selectUserNameList" resultType="UserInfo" parameterType="Map">
		<foreach collection="freeComment" item="freeComment" separator="UNION ALL">
		SELECT user_name FROM user_info
		WHERE user_no = #{freeComment.userNo}
		</foreach>
	</select>
	
	<delete id="deleteCommentComentNo" parameterType="FreeComment">
		DELETE free_comment
		WHERE free_comment_no = #{freeCommentNo}
	</delete>
	
	<!-- ======================================================================================================== -->
	<!-- 게시판 관리 > 1:1문의 -->
	
	<select id="qestionListCntAll" resultType="int">
	  	SELECT count(*) FROM question
  	</select>
	
	<select id="selectQuestionAll" resultType="Question" parameterType="web.util.Paging">
  		 SELECT * FROM (
	        SELECT rownum rnum, B.* FROM(
	                SELECT
	                Q.question_no, Q.user_no, Q.question_category, Q.question_name, Q.question_content, Q.question_date, Q.question_hit
					, Q.question_exist, Q.answer, Q.answer_content, UI.user_name
					FROM question Q
					JOIN user_info UI ON Q.user_no = UI.user_no
	                ORDER BY Q.question_no DESC
	        ) B
	    ) WHERE rnum BETWEEN #{startNo} AND #{endNo}
  	</select>
  	
  </mapper>